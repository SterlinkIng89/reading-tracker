---
// ReadingLogger component - Modal for logging reading progress
---

<!-- Reading Logger Modal -->
<div
  id="reading-logger-modal"
  class="fixed inset-0 bg-black bg-opacity-50 hidden z-50"
>
  <div class="flex items-center justify-center min-h-screen p-4">
    <div
      class="bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-gray-700"
    >
      <!-- Modal Header -->
      <div class="px-6 py-4 border-b border-gray-700">
        <h3 class="text-lg font-semibold text-white">Log Reading Progress</h3>
        <p class="text-sm text-gray-400 mt-1">Record your reading session</p>
      </div>

      <!-- Modal Body -->
      <div class="px-6 py-4 space-y-4">
        <!-- Book Info -->
        <div class="bg-gray-700 rounded-lg p-3">
          <h4 class="font-medium text-white" id="logger-book-title">
            Book Title
          </h4>
          <p class="text-sm text-gray-400" id="logger-book-author">by Author</p>
        </div>

        <!-- Date Input -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2"
            >Date</label
          >
          <input
            type="date"
            id="reading-date"
            class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-slate-400 focus:border-slate-400"
            value={new Date().toISOString().split("T")[0]}
          />
        </div>

        <!-- Pages Read -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2"
            >Pages Read</label
          >
          <input
            type="number"
            id="pages-read"
            placeholder="25"
            min="1"
            class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-slate-400 focus:border-slate-400"
          />
        </div>

        <!-- Notes (Optional) -->
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2"
            >Notes (Optional)</label
          >
          <textarea
            id="reading-notes"
            placeholder="Any thoughts about this reading session..."
            rows="3"
            class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-slate-400 focus:border-slate-400 resize-none"
          ></textarea>
        </div>
      </div>

      <!-- Modal Footer -->
      <div
        class="px-6 py-4 border-t border-gray-700 flex justify-end space-x-3"
      >
        <button
          id="cancel-logging"
          class="px-4 py-2 text-sm font-medium text-gray-400 hover:text-white transition-colors"
        >
          Cancel
        </button>
        <button
          id="save-logging"
          class="px-4 py-2 bg-gradient-to-r from-slate-600 to-slate-700 text-white text-sm font-medium rounded-lg hover:from-slate-700 hover:to-slate-800 focus:ring-2 focus:ring-slate-500 transition-all"
        >
          Save Progress
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Modal functionality
  const modal = document.getElementById("reading-logger-modal");
  const cancelBtn = document.getElementById("cancel-logging");
  const saveBtn = document.getElementById("save-logging");

  // Close modal function
  function closeModal() {
    if (modal) {
      modal.classList.add("hidden");
    }
  }

  // Open modal function (to be called from other components)
  (window as any).openReadingLogger = (bookData: any) => {
    if (modal) {
      // Populate book data
      const titleEl = document.getElementById("logger-book-title");
      const authorEl = document.getElementById("logger-book-author");

      if (titleEl && bookData.title) titleEl.textContent = bookData.title;
      if (authorEl && bookData.author)
        authorEl.textContent = `by ${bookData.author}`;

      modal.classList.remove("hidden");
    }
  };

  // Event listeners
  if (cancelBtn) {
    cancelBtn.addEventListener("click", closeModal);
  }

  if (saveBtn) {
    saveBtn.addEventListener("click", () => {
      // TODO: Save reading log
      const date = (document.getElementById("reading-date") as HTMLInputElement)
        ?.value;
      const pages = (document.getElementById("pages-read") as HTMLInputElement)
        ?.value;
      const notes = (
        document.getElementById("reading-notes") as HTMLTextAreaElement
      )?.value;

      console.log("Saving reading log:", { date, pages, notes });

      // Close modal
      closeModal();

      // Clear form
      if (document.getElementById("pages-read")) {
        (document.getElementById("pages-read") as HTMLInputElement).value = "";
      }
      if (document.getElementById("reading-notes")) {
        (
          document.getElementById("reading-notes") as HTMLTextAreaElement
        ).value = "";
      }
    });
  }

  // Close modal when clicking outside
  if (modal) {
    modal.addEventListener("click", (e) => {
      if (e.target === modal) {
        closeModal();
      }
    });
  }
</script>
